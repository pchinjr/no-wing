AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'no-wing - Autonomous Developer Onboarding Infrastructure'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
    Description: Deployment environment
  
  GitHubAppId:
    Type: String
    Description: GitHub App ID for integration
    NoEcho: true
  
  GitHubInstallationId:
    Type: String
    Description: GitHub App Installation ID
    NoEcho: true
  
  MonthlyCostLimit:
    Type: Number
    Default: 500
    Description: Monthly cost limit in USD for budget alerts

Globals:
  Function:
    Timeout: 300
    MemorySize: 512
    Runtime: nodejs18.x
    Environment:
      Variables:
        NODE_ENV: !Ref Environment
        LOG_LEVEL: info

Resources:
  # ============================================================================
  # IAM ROLES AND POLICIES
  # ============================================================================
  
  # Master Orchestrator Role (Q's boss)
  NoWingOrchestratorRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'NoWingOrchestratorRole-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: NoWingOrchestratorPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              # IAM permissions to manage Q roles
              - Effect: Allow
                Action:
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:AttachRolePolicy
                  - iam:DetachRolePolicy
                  - iam:PutRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:GetRole
                  - iam:ListRoles
                  - iam:PassRole
                  - iam:TagRole
                  - iam:UntagRole
                Resource: 
                  - !Sub 'arn:aws:iam::${AWS::AccountId}:role/NoWingQ*'
                  - !Sub 'arn:aws:iam::${AWS::AccountId}:role/NoWingDev*'
              # Secrets Manager for GitHub integration
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                Resource: !Ref GitHubSecretsSecret
              # CloudWatch Logs
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/no-wing/*'
      Tags:
        - Key: NoWingComponent
          Value: orchestrator
        - Key: Environment
          Value: !Ref Environment

  # Q Permission Boundary (Prevents privilege escalation)
  NoWingQPermissionBoundary:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub 'NoWingQPermissionBoundary-${Environment}'
      Description: 'Permission boundary for Q agents to prevent privilege escalation'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          # Deny dangerous actions
          - Effect: Deny
            Action:
              - iam:CreateRole
              - iam:DeleteRole
              - iam:AttachRolePolicy
              - iam:DetachRolePolicy
              - iam:PutRolePolicy
              - iam:DeleteRolePolicy
              - iam:CreatePolicy
              - iam:DeletePolicy
              - iam:CreateUser
              - iam:DeleteUser
              - organizations:*
              - account:*
              - billing:*
              - budgets:*
              - support:*
            Resource: '*'
          # Deny access to other Q instances
          - Effect: Deny
            Action: '*'
            Resource: 
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/NoWingQ*'
              - !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:no-wing-*'
            Condition:
              StringNotEquals:
                'aws:userid': '${aws:userid}'
          # Allow everything else within region constraints
          - Effect: Allow
            Action: '*'
            Resource: '*'
            Condition:
              StringLike:
                'aws:RequestedRegion': 
                  - !Ref AWS::Region
                  - 'us-east-1'  # Global services

  # Base Q Role Template
  NoWingQBaseRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'NoWingQBaseRole-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !GetAtt NoWingOrchestratorRole.Arn
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                'sts:ExternalId': 'no-wing-q-agent'
      PermissionsBoundary: !Ref NoWingQPermissionBoundary
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Tags:
        - Key: NoWingComponent
          Value: q-base-role
        - Key: Environment
          Value: !Ref Environment

  # ============================================================================
  # LAMBDA FUNCTIONS
  # ============================================================================

  # Main Orchestrator Function
  NoWingOrchestratorFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'no-wing-orchestrator-${Environment}'
      CodeUri: dist/
      Handler: lambda/orchestrator.handler
      Role: !GetAtt NoWingOrchestratorRole.Arn
      Environment:
        Variables:
          Q_BASE_ROLE_ARN: !GetAtt NoWingQBaseRole.Arn
          Q_PERMISSION_BOUNDARY_ARN: !Ref NoWingQPermissionBoundary
          GITHUB_SECRETS_ARN: !Ref GitHubSecretsSecret
          ENVIRONMENT: !Ref Environment
      Events:
        # API Gateway for webhook integration
        GitHubWebhook:
          Type: Api
          Properties:
            Path: /webhook/github
            Method: post
            RestApiId: !Ref NoWingApi
      Tags:
        NoWingComponent: orchestrator
        Environment: !Ref Environment

  # Demo Lambda Function (for Q interaction testing)
  NoWingDemoFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'no-wing-demo-function-${Environment}'
      CodeUri: dist/
      Handler: lambda/demo-function.handler
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
      Tags:
        NoWingComponent: demo
        Environment: !Ref Environment

  # ============================================================================
  # API GATEWAY
  # ============================================================================

  NoWingApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub 'no-wing-api-${Environment}'
      StageName: !Ref Environment
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
      Tags:
        NoWingComponent: api
        Environment: !Ref Environment

  # ============================================================================
  # SECRETS MANAGER
  # ============================================================================

  GitHubSecretsSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub 'no-wing/github-config-${Environment}'
      Description: 'GitHub App configuration for no-wing'
      SecretString: !Sub |
        {
          "appId": "${GitHubAppId}",
          "installationId": "${GitHubInstallationId}",
          "privateKey": "REPLACE_WITH_ACTUAL_PRIVATE_KEY"
        }
      Tags:
        - Key: NoWingComponent
          Value: github-integration
        - Key: Environment
          Value: !Ref Environment

  # ============================================================================
  # CLOUDWATCH LOGS
  # ============================================================================

  NoWingOrchestratorLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/no-wing-orchestrator-${Environment}'
      RetentionInDays: 30
      Tags:
        - Key: NoWingComponent
          Value: orchestrator-logs
        - Key: Environment
          Value: !Ref Environment

  NoWingQActivitiesLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/no-wing/q-activities-${Environment}'
      RetentionInDays: 90
      Tags:
        - Key: NoWingComponent
          Value: q-activities-logs
        - Key: Environment
          Value: !Ref Environment

  NoWingSecurityEventsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/no-wing/security-events-${Environment}'
      RetentionInDays: 365
      Tags:
        - Key: NoWingComponent
          Value: security-logs
        - Key: Environment
          Value: !Ref Environment

  # ============================================================================
  # S3 BUCKETS
  # ============================================================================

  NoWingAuditBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'no-wing-audit-${AWS::AccountId}-${Environment}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            Status: Enabled
            NoncurrentVersionExpirationInDays: 90
      Tags:
        - Key: NoWingComponent
          Value: audit-storage
        - Key: Environment
          Value: !Ref Environment

  # ============================================================================
  # CLOUDTRAIL
  # ============================================================================

  NoWingCloudTrail:
    Type: AWS::CloudTrail::Trail
    Properties:
      TrailName: !Sub 'no-wing-audit-trail-${Environment}'
      S3BucketName: !Ref NoWingAuditBucket
      S3KeyPrefix: 'cloudtrail-logs/'
      IncludeGlobalServiceEvents: true
      IsMultiRegionTrail: true
      EnableLogFileValidation: true
      EventSelectors:
        - ReadWriteType: All
          IncludeManagementEvents: true
          DataResources:
            - Type: 'AWS::IAM::Role'
              Values: 
                - !Sub 'arn:aws:iam::${AWS::AccountId}:role/NoWing*'
            - Type: 'AWS::Lambda::Function'
              Values:
                - !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:no-wing-*'
      Tags:
        - Key: NoWingComponent
          Value: audit-trail
        - Key: Environment
          Value: !Ref Environment

  # ============================================================================
  # BUDGETS AND COST CONTROL
  # ============================================================================

  NoWingCostBudget:
    Type: AWS::Budgets::Budget
    Properties:
      Budget:
        BudgetName: !Sub 'NoWingMonthlyCost-${Environment}'
        BudgetLimit:
          Amount: !Ref MonthlyCostLimit
          Unit: USD
        TimeUnit: MONTHLY
        BudgetType: COST
        CostFilters:
          TagKey:
            - NoWingComponent
        NotificationsWithSubscribers:
          - Notification:
              NotificationType: ACTUAL
              ComparisonOperator: GREATER_THAN
              Threshold: 80
              ThresholdType: PERCENTAGE
            Subscribers:
              - SubscriptionType: EMAIL
                Address: admin@example.com  # Replace with actual email
          - Notification:
              NotificationType: FORECASTED
              ComparisonOperator: GREATER_THAN
              Threshold: 100
              ThresholdType: PERCENTAGE
            Subscribers:
              - SubscriptionType: EMAIL
                Address: admin@example.com  # Replace with actual email

  # ============================================================================
  # CLOUDWATCH ALARMS
  # ============================================================================

  OrchestratorErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub 'NoWing-Orchestrator-Errors-${Environment}'
      AlarmDescription: 'High error rate in no-wing orchestrator'
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 5
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref NoWingOrchestratorFunction
      TreatMissingData: notBreaching

  QActivityVolumeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub 'NoWing-Q-Activity-Volume-${Environment}'
      AlarmDescription: 'Unusual Q activity volume detected'
      MetricName: IncomingLogEvents
      Namespace: AWS/Logs
      Statistic: Sum
      Period: 3600
      EvaluationPeriods: 1
      Threshold: 1000
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: LogGroupName
          Value: !Ref NoWingQActivitiesLogGroup
      TreatMissingData: notBreaching

Outputs:
  OrchestratorFunctionArn:
    Description: 'ARN of the no-wing orchestrator function'
    Value: !GetAtt NoWingOrchestratorFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}-OrchestratorArn'

  QBaseRoleArn:
    Description: 'ARN of the Q base role template'
    Value: !GetAtt NoWingQBaseRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-QBaseRoleArn'

  ApiGatewayUrl:
    Description: 'API Gateway endpoint URL'
    Value: !Sub 'https://${NoWingApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}'
    Export:
      Name: !Sub '${AWS::StackName}-ApiUrl'

  GitHubWebhookUrl:
    Description: 'GitHub webhook URL'
    Value: !Sub 'https://${NoWingApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/webhook/github'
    Export:
      Name: !Sub '${AWS::StackName}-WebhookUrl'

  AuditBucketName:
    Description: 'S3 bucket for audit logs'
    Value: !Ref NoWingAuditBucket
    Export:
      Name: !Sub '${AWS::StackName}-AuditBucket'
