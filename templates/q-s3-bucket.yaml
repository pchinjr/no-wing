AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Q-created S3 bucket with proper IaC'

Parameters:
  BucketName:
    Type: String
    Description: Name of the S3 bucket (will be made globally unique)
    Default: q-s3-bucket
  
  BucketPurpose:
    Type: String
    Description: Purpose of the S3 bucket
    Default: General storage bucket created by Q AI agent
  
  Environment:
    Type: String
    Description: Environment (dev, staging, prod)
    Default: dev
    AllowedValues:
      - dev
      - staging
      - prod
  
  QIdentity:
    Type: String
    Description: Q agent identity
    Default: q-agent
  
  EnableVersioning:
    Type: String
    Description: Enable S3 versioning
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
  
  EnableEncryption:
    Type: String
    Description: Enable S3 server-side encryption
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'

Resources:
  # S3 Bucket
  QS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${BucketName}-${AWS::AccountId}-${AWS::Region}'
      VersioningConfiguration:
        Status: !If [EnableVersioningCondition, Enabled, Suspended]
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !If [EnableEncryptionCondition, AES256, '']
            BucketKeyEnabled: !If [EnableEncryptionCondition, true, false]
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: DeleteIncompleteMultipartUploads
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
          - Id: TransitionToIA
            Status: Enabled
            Transition:
              StorageClass: STANDARD_IA
              TransitionInDays: 30
          - Id: TransitionToGlacier
            Status: Enabled
            Transition:
              StorageClass: GLACIER
              TransitionInDays: 90
      NotificationConfiguration:
        CloudWatchConfigurations:
          - Event: s3:ObjectCreated:*
            CloudWatchConfiguration:
              LogGroupName: !Ref QS3BucketLogGroup
      Tags:
        - Key: CreatedBy
          Value: Q-Agent
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: no-wing
        - Key: QIdentity
          Value: !Ref QIdentity
        - Key: Purpose
          Value: !Ref BucketPurpose

  # CloudWatch Log Group for S3 events
  QS3BucketLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/s3/${BucketName}-${AWS::AccountId}-${AWS::Region}'
      RetentionInDays: 30
      Tags:
        - Key: CreatedBy
          Value: Q-Agent
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: no-wing

  # IAM Role for S3 access (if needed by applications)
  QS3AccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${BucketName}-access-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - lambda.amazonaws.com
                - ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: QS3AccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource:
                  - !GetAtt QS3Bucket.Arn
                  - !Sub '${QS3Bucket.Arn}/*'
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !GetAtt QS3BucketLogGroup.Arn
      Tags:
        - Key: CreatedBy
          Value: Q-Agent
        - Key: Environment
          Value: !Ref Environment
        - Key: ManagedBy
          Value: no-wing

Conditions:
  EnableVersioningCondition: !Equals [!Ref EnableVersioning, 'true']
  EnableEncryptionCondition: !Equals [!Ref EnableEncryption, 'true']

Outputs:
  BucketName:
    Description: Name of the created S3 bucket
    Value: !Ref QS3Bucket
    Export:
      Name: !Sub '${AWS::StackName}-BucketName'
  
  BucketArn:
    Description: ARN of the created S3 bucket
    Value: !GetAtt QS3Bucket.Arn
    Export:
      Name: !Sub '${AWS::StackName}-BucketArn'
  
  BucketDomainName:
    Description: Domain name of the S3 bucket
    Value: !GetAtt QS3Bucket.DomainName
    Export:
      Name: !Sub '${AWS::StackName}-BucketDomainName'
  
  AccessRoleArn:
    Description: ARN of the S3 access role
    Value: !GetAtt QS3AccessRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-AccessRoleArn'
